{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d7253fa8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">HOME</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button cla\r\n                        ssName=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">ENABLED DARKMODE</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","// import React, {useState} from 'react'\r\n\r\n\r\n// export default function TextForm(props) {\r\n//     const handleUpClick = ()=>{\r\n//         let newText = text.toUpperCase();\r\n//         setText(newText)\r\n//         props.showAlert(\"Converted to uppercase!\", \"success\");\r\n//     }\r\n\r\n//     const handleLoClick = ()=>{ \r\n//         let newText = text.toLowerCase();\r\n//         setText(newText)\r\n//         props.showAlert(\"Converted to lowercase!\", \"success\");\r\n//     }\r\n\r\n//     const handleClearClick = ()=>{ \r\n//         let newText = '';\r\n//         setText(newText);\r\n//         props.showAlert(\"Text Cleared!\", \"success\");\r\n//     }\r\n\r\n//     const handleOnChange = (event)=>{\r\n//         setText(event.target.value) \r\n//     }\r\n\r\n//     const handleCopy = () => {\r\n//         navigator.clipboard.writeText(text); \r\n//         props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n//     }\r\n\r\n//     const handleExtraSpaces = () => {\r\n//         let newText = text.split(/[ ]+/);\r\n//         setText(newText.join(\" \"));\r\n//         props.showAlert(\"Extra spaces removed!\", \"success\");\r\n//     }\r\n\r\n//     const [text, setText] = useState(''); \r\n\r\n//     return (\r\n//         <>\r\n//         <div className=\"container\" style={{color: props.mode==='dark'?'white':'#d98471bf'}}> \r\n//             <h1 className='mb-4'>{props.heading}</h1>\r\n//             <div className=\"mb-3\"> \r\n//             <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#ace2c994':'white', color: props.mode==='dark'?'white':'#d98471bf'}} id=\"myBox\" rows=\"8\"></textarea>\r\n//             </div>\r\n//             <button disabled={text.length===0} className=\"btn btn-warning mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n//             <button disabled={text.length===0} className=\"btn btn-warning mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n//             <button disabled={text.length===0} className=\"btn btn-warning mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n//             <button disabled={text.length===0} className=\"btn btn-warning mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n//             <button disabled={text.length===0} className=\"btn btn-warning mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n//         </div>\r\n//         <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#d98471bf'}}>\r\n//             <h2>Your text summary</h2>\r\n//             <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n//             <p>{0.008 *  text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n//             {/* <h2>Preview</h2>\r\n//             <p>{text.length>0?text:\"Nothing to preview!\"}</p> */}\r\n//         </div>\r\n//         </>\r\n//     )\r\n// }\r\n\r\nimport React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" +  text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#d98471bf'}}> \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#d98471bf'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-warning mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-warning mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-warning mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-warning mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-warning mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#d98471bf'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            {/* <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p> */}\r\n        </div>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#d98471bf';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n    {/* <Navbar/> */}\n    <Navbar title=\"ONLY_TEXT\" mode={mode} toggleMode={toggleMode} />\n    <div className=\"container my-3\">\n    <TextForm heading=\"Enter the text for doing following opration\" mode={mode}/>\n    </div>\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}